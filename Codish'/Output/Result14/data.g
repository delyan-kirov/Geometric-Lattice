G000001 := GraphByEdges([[1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0], [10, 0], [11, 0], [12, 0], [13, 1], [13, 2], [13, 3], [13, 4], [13, 5], [13, 6], [13, 7], [13, 8], [13, 9], [13, 10], [13, 11], [13, 12]]);
G000002 := GraphByEdges([[1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 1], [7, 2], [7, 3], [7, 4], [7, 6], [8, 1], [8, 5], [9, 2], [9, 5], [10, 3], [10, 5], [11, 4], [11, 5], [12, 5], [12, 6], [13, 7], [13, 8], [13, 9], [13, 10], [13, 11], [13, 12]]);
G000003 := GraphByEdges([[1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 1], [7, 2], [7, 3], [7, 4], [7, 5], [8, 1], [8, 6], [9, 2], [9, 6], [10, 3], [10, 6], [11, 4], [11, 6], [12, 5], [12, 6], [13, 7], [13, 8], [13, 9], [13, 10], [13, 11], [13, 12]]);
G000004 := GraphByEdges([[1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 1], [7, 2], [7, 3], [7, 5], [7, 6], [8, 1], [8, 4], [9, 2], [9, 4], [10, 3], [10, 4], [11, 4], [11, 5], [12, 4], [12, 6], [13, 7], [13, 8], [13, 9], [13, 10], [13, 11], [13, 12]]);
G000005 := GraphByEdges([[1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 1], [7, 2], [8, 1], [8, 3], [9, 1], [9, 4], [10, 1], [10, 5], [11, 1], [11, 6], [12, 2], [12, 3], [12, 4], [12, 5], [12, 6], [13, 7], [13, 8], [13, 9], [13, 10], [13, 11], [13, 12]]);
G000006 := GraphByEdges([[1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 1], [7, 2], [8, 1], [8, 3], [8, 4], [8, 5], [8, 6], [9, 2], [9, 3], [10, 2], [10, 4], [11, 2], [11, 5], [12, 2], [12, 6], [13, 7], [13, 8], [13, 9], [13, 10], [13, 11], [13, 12]]);
G000007 := GraphByEdges([[1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 1], [7, 2], [7, 4], [7, 5], [7, 6], [8, 1], [8, 3], [9, 2], [9, 3], [10, 3], [10, 4], [11, 3], [11, 5], [12, 3], [12, 6], [13, 7], [13, 8], [13, 9], [13, 10], [13, 11], [13, 12]]);
Lattices := [G000001, G000002, G000003, G000004, G000005, G000006, G000007];
LoadPackage("yags");
IsoFreeGraphs := [];

while Length(Lattices) > 0 do 
  Add(IsoFreeGraphs, Lattices[1]);
  Lattices := Filtered(Lattices, x -> not IsIsomorphicGraph(x, Lattices[1]));
od;

GraphAutGps := [];
GraphAutSize := [];

for elements in IsoFreeGraphs do
Add(GraphAutGps, AutomorphismGroup(elements));
Add(GraphAutSize, Size(AutomorphismGroup(elements)));
od;

Print("Graph group sizes: ");
Print(GraphAutSize);
SaveWorkspace("workspace.g");
PrintTo("result.g", Length(IsoFreeGraphs));
quit;
