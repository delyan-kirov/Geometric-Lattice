language ESSENCE 2.4.0

given n : int

letting N be domain int(0..n-1)

find J : function (total) (N,N) --> N
find M : function (total) (N,N) --> N

such that

$Associative
forAll i,j,k: N. J((i,J((j,k)))) = J((J((i,j)),k)),

$Commutative
forAll i,j: N. J((i,j)) = J((j,i)),
forAll i,j: N. M((i,j)) = M((j,i)),

$idempotent
forAll i: N. J((i,i)) = i,

$Bounded
forAll i : N. J((0,i)) = 0,
forAll i : N. J((n-1,i)) = i,

$Week absorption law
forAll i,j : N. J((M((i,j)), i)) = i,

$Duality
forAll i,j : N. ((J((i,j)) = i) /\ (M((i,j)) = j)) \/ !(J((i,j)) = i),

$Ranked
forAll i,j : N. ((J((i,j)) = i) /\ (i <= j)) \/ !(J((i,j)) = i)
