language ESSENCE 2.4.0

given n : int
letting N be domain int(0..n-1)

find M : function (total) (N,N) --> N
find J : function (total) (N,N) --> N
find R : function (total) N --> N
find C : function (total) (N,N) --> int(0..1)

such that

$Associative
forAll i,j,k: N. M((i,M((j,k)))) = M((M((i,j)),k)),
forAll i,j,k: N. J((i,J((j,k)))) = J((J((i,j)),k)),

$Commutative
forAll i,j: N. M((i,j)) = M((j,i)),
forAll i,j: N. J((i,j)) = J((j,i)),

$Absorption
forAll i,j: N. M((i,J((i,j)))) = i,
forAll i,j: N. J((i,M((i,j)))) = i,

$Bounded
forAll i : N. M((n-1,i)) = i,
forAll i : N. J((0,i)) = i,

$Cover relation
forAll i,j : N. (!((J((i,j)) = i) \/ (J((i,j)) = j)) /\ (C((i,j)) = 0)) \/
(M((i,j)) = i) /\ (exists k : N. !(k = i) /\ !(k = j) /\ (M((j,k)) = k) /\ (C((i,j)) = 0)) \/
(M((i,j)) = j) /\ (exists k : N. !(k = i) /\ !(k = j) /\ (M((i,k)) = k) /\ (C((i,j)) = 0)) \/
(C((i,j)) = 1),

$Ranked by echelon
forAll i,j : N. ((J((i,j)) = i) /\ (i >= j)) \/ 
                ((J((i,j)) = j) /\ (j >= i)) \/ 
                (M((i,j)) = 0) \/
                                 (forAll k,l : N. (
                                                   ((J((i,k)) = i) /\ (J((j,l)) = j) /\ (i > j) /\ (k >= l)) \/
                                                   ((J((i,k)) = i) /\ (J((j,l)) = j) /\ (i > j) /\ (k <= l)) \/
                                                   !((J((i,k)) = i) /\ (J((j,l)) = j))
                                                   )),
                                                                                           
$Graded
forAll i,j : N. (((J((i,j)) = i) /\ (R(i) > R(j))) \/ !(J((i,j)) = i)) /\ (((C((i,j)) = 1) /\ (R(i) = R(j) + 1)) \/ !(C((i,j)) = 1)),

Semi-modular
forAll i,j : N. ((C((M((i,j)),i)) = 1) /\ (C((J((i,j)),j)) = 1)) \/ !(C((M((i,j)),i)) = 1),

$Atomistic
forAll i: N. (i = 0) \/
             !(exists j:N. (M((i,j)) = j) /\ !(i = j) /\ !(j = 0)) \/ 
             (exists j,k: N. (J((j,k)) = i) /\ !(j = i) /\ !(k = i))
